name: Build Installer

on:
  push:
    branches: 
      - installer
      - '*issue-130*'

env:
  BUILD_CONFIG: "Release"
  BUILDNUMBER: ${{github.run_number}}
  CURDIR: ${{github.workspace}}

jobs:
  build:
    name: Build the Ziti Desktop Edge for Windows Installer Package
    runs-on: windows-latest
    env:
      CURDIR: ${{ github.workspace }}
      CODE: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}
      SOME_KEY: ${{ secrets.SOME_KEY }}
      ADV_INST_LICENSEKEY: ${{ secrets.ADV_INST_LICENSEKEY }}

    steps:
      - uses: actions/checkout@master
      - uses: microsoft/setup-msbuild@v1
#      - shell: pwsh
#        env:
#          SUPER_SECRET: ${{ secrets.SOME_KEY }}
#        run: |
#          echo "$env:SUPER_SECRET"
#      - name: Print new build number
#        run: |
#          echo "Build number is ${{ steps.buildnumber.outputs.build_number }}"
#          echo "Build number is ${env:BUILD_NUMBER}"
#        env:
#          BUILD_NUMBER: "Please Work"
#
      - name: Place signing key into proper location for installer
        run: |
          echo "${env:SOME_KEY}" > WinSign.b64
          echo "${env:ADV_INST_LICENSEKEY}" > registration.b64
          C:\Windows\System32\certutil.exe -decode registration.b64 registration.key
          C:\Windows\System32\certutil.exe -decode WinSign.b64 Installer/WinSign.p12
          head -c 4 registration.key
          tail -c 4 registration.key
          (Get-FileHash .\registration.txt).Hash
          ls -r registration.key
#     - name: Cache Chocolatey Dependencies
#       uses: actions/cache@v1
#       with:
#         path: C:\ProgramData\chocolatey\lib
#         key: choco-cache-v1
#         restore-keys: |
#           choco-cache-v1
#     - name: Trying to run choco install.
#       run: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
#     - name: Install advanced installer
#       run: choco install advanced-installer wixtoolset --yes
#     - name: Restore nuget packages
#       run: nuget restore ZitiDesktopEdge.sln
#     - shell: cmd
#       name: Register Advanced Installer
#       run: |
#         "C:\Program Files (x86)\Caphyon\Advanced Installer 17.5\bin\x86\AdvancedInstaller.com" /register "${env:ADV_INST_LICENSEKEY}" 2>&1
#     - name: Build UI and Assemble Installer
#       run: powershell -File .\Installer\build.ps1
#     - name: Upload installer onto job
#       uses: actions/upload-artifact@v2
#       with:
#         name: ZitiDesktopEdgeClient
#         path: "Installer/Output/Ziti Desktop Edge Client-1.2.10.exe"